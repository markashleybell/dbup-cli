name: Release

on: 
  push:
    tags:
    - 'v*' # Only build if tagged v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: [windows-latest]
    steps:
    
    - name: Checkout
      uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1

    - name: Publish win-x64
      run: dotnet publish --configuration Release --runtime win-x64 --self-contained false --output "$env:GITHUB_WORKSPACE\win-x64"

    - name: Publish linux-x64
      run: dotnet publish --configuration Release --runtime linux-x64 --self-contained false --output "$env:GITHUB_WORKSPACE\linux-x64"

    - name: Get Ref Detail
      uses: markashleybell/actions-get-ref-detail@v1
      id: ref_detail

    - name: Create win-x64 binary package
      env:
        BINARY_PACKAGE_FILENAME_WIN_X64: ${{ format('dbup-cli-{0}-win-x64.zip', steps.ref_detail.outputs.ref_name) }}
      run: |
        cd "C:\Program Files\7-Zip"
        .\7z.exe a -tzip $env:GITHUB_WORKSPACE\$env:BINARY_PACKAGE_FILENAME_WIN_X64 $env:GITHUB_WORKSPACE\win-x64\* "-xr!*.pdb" "-xr!*.xml"

    - name: Create linux-x64 binary package
      env:
        BINARY_PACKAGE_FILENAME_LINUX_X64: ${{ format('dbup-cli-{0}-linux-x64.zip', steps.ref_detail.outputs.ref_name) }}
      run: |
        cd "C:\Program Files\7-Zip"
        .\7z.exe a -tzip $env:GITHUB_WORKSPACE\$env:BINARY_PACKAGE_FILENAME_LINUX_X64 $env:GITHUB_WORKSPACE\linux-x64\* "-xr!*.pdb" "-xr!*.xml"

    - name: Create GitHub release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.ref_detail.outputs.ref_name }}
        release_name: Release ${{ steps.ref_detail.outputs.ref_name }}
        draft: false
        prerelease: false

    - name: Upload win-x64 release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # References the create_release step by ID to get its outputs object, which includes an `upload_url`
        asset_path: ${{ format('./dbup-cli-{0}-win-x64.zip', steps.ref_detail.outputs.ref_name) }}
        asset_name: ${{ format('dbup-cli-{0}-win-x64.zip', steps.ref_detail.outputs.ref_name) }}
        asset_content_type: application/zip

    - name: Upload linux-x64 release asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # References the create_release step by ID to get its outputs object, which includes an `upload_url`
        asset_path: ${{ format('./dbup-cli-{0}-linux-x64.zip', steps.ref_detail.outputs.ref_name) }}
        asset_name: ${{ format('dbup-cli-{0}-linux-x64.zip', steps.ref_detail.outputs.ref_name) }}
        asset_content_type: application/zip
